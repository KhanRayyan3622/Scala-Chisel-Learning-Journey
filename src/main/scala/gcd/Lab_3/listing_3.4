// 3.2.1 ALU Operations
// Different operations that will be performed by the ALU are grouped in the form of an object. A Scala
// object is used to define all the operations supported by the ALU. Listing 3.4 defines the ALUOP
// object for this purpose.

package Lab_3
import chisel3._
import chisel3.tester._

object ALUOP {
// ALU Operations , may expand / modify in future
val ALU_ADD = 0. U (4. W )
val ALU_SUB = 1. U (4. W )
val ALU_AND = 2. U (4. W )
val ALU_OR = 3. U (4. W )
val ALU_XOR = 4. U (4. W )
val ALU_SLT = 5.U(4.W)    // Represents the Set Less Than (SLT) operation
  val ALU_SLL = 6.U(4.W)    // Represents the Shift Left Logical (SLL) operation
  val ALU_SLTU = 7.U(4.W)   // Represents the Set Less Than Unsigned (SLTU) operation
  val ALU_SRL = 8.U(4.W)    // Represents the Shift Right Logical (SRL) operation
  val ALU_SRA = 9.U(4.W)    // Represents the Shift Right Arithmetic (SRA) operation
  val ALU_COPY_A = 10.U(4.W) // Represents copying input A to output
  val ALU_COPY_B = 11.U(4.W) // Represents copying input B to output
  val ALU_XXX = 15.U(4.W)    // Represents an undefined/unsupported operation
}







package Lab_1
import chisel3._
import chisel3.util._
import scala.language.postfixOps

class Typecast (size : Int , maxValue : Int) extends Module {
    val io = IO (new Bundle {
        val result = Output (Bool())
    })
    val ray=maxValue.asUInt
    def genCounter ( n : Int , max : UInt ) = {
    val abc=WireInit(max)
        val count = RegInit (0. U )
     when ( count === abc) {
            count := 0. U
        } .otherwise {
            count := count + 1. U
        }
        count
    }
    val counter1 = genCounter ( size , ray)
    io . result := 1.B
}
